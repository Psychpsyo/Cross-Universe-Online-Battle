/* card animations*/

@keyframes yourAttack {
	from {transform: translate3d(-50%, -50%, 0);}
	to   {transform: translate3d(calc(-50% + var(--atk-offset) * 100%), calc(-50% - var(--atk-distance) * 100%), 20vh);}
}
@keyframes opponentAttack {
	from {transform: translate3d(-50%, -50%, 0) rotate(180deg);}
	to   {transform: translate3d(calc(-50% + var(--atk-offset) * 100%), calc(-50% + var(--atk-distance) * 100%), 20vh) rotate(180deg);}
}

.attacking {
	z-index: 100;
}
.attacking .card {
	animation-duration: calc(.2s * var(--game-speed));
	animation-iteration-count: 2;
	animation-direction: alternate;
	animation-timing-function: ease-in-out;
}
#p0Grid .attacking .card {
	animation-name: opponentAttack;
}
#p1Grid .attacking .card {
	animation-name: yourAttack;
}

@keyframes yourActivation {
	0%   {transform: translate3d(-50%, -50%, 0);}
	85%  {transform: translate3d(-50%, -50%, 40vh);}
	100% {transform: translate3d(-50%, -50%, 40vh);}
}
@keyframes opponentActivation {
	0%   {transform: translate3d(-50%, -50%, 0) rotate(180deg);}
	85%  {transform: translate3d(-50%, -50%, 40vh) rotate(180deg);}
	100% {transform: translate3d(-50%, -50%, 40vh) rotate(180deg);}
}

.activating {
	z-index: 100;
}

.activating .card {
	animation-duration: calc(.5s * var(--game-speed));
	animation-iteration-count: 2;
	animation-direction: alternate;
	animation-timing-function: ease-in-out;
}
#p0Grid .activating .card {
	animation-name: opponentActivation;
}
#p1Grid .activating .card {
	animation-name: yourActivation;
}


/* general UI stuff */
#phaseDisplay {
	position: absolute;
	top: 50%;
	left: 50%;
	transform: translate(-50%, -50%);
	width: 100%;
}
#phaseDisplay > ol {
	display: flex;
	margin: 0;
	padding: 0;
	background-color: #000A;
	text-align: center;
	width: 100%;
	justify-content: center;
	
	list-style-type: none;
}
#phaseDisplay li {
	color: #eee;
	padding: .05em .2em;
	background-image: linear-gradient(transparent, transparent, orange);
	background-size: 100% 200%;
	background-position: 0% 0%;
	transition: background-position .25s;
	white-space: pre;
	flex-grow: 1;
	max-width: 6.5em;
}
#phaseDisplay .current {
	background-position: 0% 100%;
}
#phaseDisplay .invalid {
	background-color: #0008;
	color: #eee8;
}

.turnDisplay {
	position: absolute;
	overflow: hidden;
}
#yourTurnDisplay {
	top: 100%;
	left: 0;
}
#opponentTurnDisplay {
	position: absolute;
	bottom: 100%;
	right: 0;
}
.turnDisplayLabel {
	color: #eee;
	background-color: #000A;
	transition: transform .35s;
	transform: translateY(0);
}
#yourTurnDisplayLabel {
	padding-left: .5em;
	padding-right: 1.5em;
	clip-path: polygon(0 0, 100% 0, calc(100% - 1em) 100%, 0 100%);
}
#yourTurnDisplayLabel.hidden {
	transform: translateY(-100%);
}
#opponentTurnDisplayLabel {
	padding-right: .5em;
	padding-left: 1.5em;
	clip-path: polygon(0 100%, 1em 0, 100% 0, 100% 100%);
}
#opponentTurnDisplayLabel.hidden {
	transform: translateY(100%);
}